{"version":3,"sources":["webpack:///./src/components/simpleleafletmap.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SimpleLeafletMap","props","_React$Component","call","this","render","window","react_default","a","createElement","Map","center","zoom","TileLayer","url","React","Component","IndexPage","layout","components_simpleleafletmap","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-7a1457e43000b31a3960.js","sourcesContent":["import React from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport './simpleleafletmap.css'\n\nclass SimpleLeafletMap extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const pos = [50,0];\n\n    //if (typeof window !== 'undefined') {\n    if (typeof window == 'mooo') {\n      return (\n        <Map center={pos} zoom={10}>\n          <TileLayer\n            url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n          />\n        </Map>\n      );\n    }\n    return null\n  }\n}\n\nexport default SimpleLeafletMap\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SimpleLeafletMap from \"../components/simpleleafletmap\"\n\nconst IndexPage = () => (\n  <Layout>\n    <h1>This is your map</h1>\n    <SimpleLeafletMap/>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}